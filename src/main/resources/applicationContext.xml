<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd"
        default-autowire="byName" default-lazy-init="true">
	<description>Spring公共配置 </description>
	
	<!-- 配置自动扫描包: 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.xx.project,xx.ssm" annotation-config="true" />
	
	<!-- 导入资源文件 -->
	<context:property-placeholder location="classpath:application.properties" />
	
	<!-- 导入配置文件 -->
	<import resource="classpath:spring-template.xml" />

	<!-- spring集成mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />		
		<property name="typeAliasesPackage" value="com.tw.project.entity" />
		<property name="mapperLocations" value="classpath*:mybatis/mapper/*Mapper.xml" />
	</bean>

	<!-- 事务管理器 --> 
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="dataSource" />  
    </bean>
	<!-- aop切面通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		 <!--配置事务传播性，增删改使用事务 -->
		<tx:attributes>
			<tx:method name="create*" />
			<tx:method name="modify*" />
			<tx:method name="remove*" />			
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- aop切面配置 -->
	<aop:config proxy-target-class="true">
		<!-- 配置事务切点，定位具体类 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.tw.service.*Service.*(..))" />
		<!-- 配置aop类与方法关联  -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- cglib 动态代理字节码增强 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 配置生产环境，在web.xml中进行区分 -->
	<beans profile="production">
		<context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties" />
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
	</beans>
	<!-- 配置测试环境，在web.xml中进行区分 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties, classpath*:/application-test.properties" />
	
		<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
		<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close"> -->
		<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
				<!-- <property name="defaultAutoCommit" value="false" /> -->

		</bean>	
	</beans>
</beans>